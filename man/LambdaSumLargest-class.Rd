% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/atoms.R
\docType{class}
\name{LambdaSumLargest-class}
\alias{LambdaSumLargest-class}
\alias{.LambdaSumLargest}
\alias{LambdaSumLargest}
\alias{allow_complex,LambdaSumLargest-method}
\alias{to_numeric,LambdaSumLargest-method}
\alias{validate_args,LambdaSumLargest-method}
\alias{get_data,LambdaSumLargest-method}
\alias{.grad,LambdaSumLargest-method}
\title{The LambdaSumLargest class.}
\usage{
LambdaSumLargest(A, k)

\S4method{allow_complex}{LambdaSumLargest}(object)

\S4method{to_numeric}{LambdaSumLargest}(object, values)

\S4method{validate_args}{LambdaSumLargest}(object)

\S4method{get_data}{LambdaSumLargest}(object)

\S4method{.grad}{LambdaSumLargest}(object, values)
}
\arguments{
\item{A}{An \linkS4class{Expression} or numeric matrix.}

\item{k}{A positive integer.}

\item{object}{A \linkS4class{LambdaSumLargest} object.}

\item{values}{A list of numeric values for the arguments}
}
\description{
This class represents the sum of the \code{k} largest eigenvalues of a matrix.
}
\section{Methods (by generic)}{
\itemize{
\item \code{allow_complex}: Does the atom handle complex numbers?

\item \code{to_numeric}: Returns the largest eigenvalue of \code{A}, which must be symmetric.

\item \code{validate_args}: Verify that the argument \code{A} is square.

\item \code{get_data}: Returns the parameter \code{k}.

\item \code{.grad}: Gives the (sub/super)gradient of the atom w.r.t. each variable
}}

\section{Slots}{

\describe{
\item{\code{k}}{A positive integer.}
}}

