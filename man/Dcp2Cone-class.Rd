% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dcp2cone.R
\docType{class}
\name{Dcp2Cone-class}
\alias{Dcp2Cone-class}
\alias{.Dcp2Cone}
\alias{accepts,Dcp2Cone,Problem-method}
\alias{perform,Dcp2Cone,Problem-method}
\title{Reduce DCP Problem to Conic Form}
\usage{
\S4method{accepts}{Dcp2Cone,Problem}(object, problem)

\S4method{perform}{Dcp2Cone,Problem}(object, problem)
}
\arguments{
\item{object}{A \linkS4class{Dcp2Cone} object.}

\item{problem}{A \linkS4class{Problem} object.}
}
\description{
This reduction takes as input (minimization) DCP problems and converts them into problems
with affine objectives and conic constraints whose arguments are affine.
}
\section{Methods (by generic)}{
\itemize{
\item \code{accepts}: A problem is accepted if it is a minimization and is DCP.

\item \code{perform}: Converts a DCP problem to a conic form.
}}

